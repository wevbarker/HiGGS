(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
Run@"rm -rf ./svy/node-*"
Run@"rm -rf ./svy"
Run@"mkdir ./svy"


(* ::Input::Initialization:: *)
RawJobsBatch={{"spin_0p",{Alp1==0,Alp2==0,Alp3==0,Alp4==0,Alp5==0,2Bet1+Bet2==0,Bet1+2Bet3==0}},
{"spin_0m",{Alp1==0,Alp2==0,Alp4==0,Alp5==0,Alp6==0,2Bet1+Bet2==0,Bet1+2Bet3==0}},
{"simple_spin_1p",{Alp1==0,Alp2==0,Alp3==0,Alp4==0,Alp6==0,Bet1==0,Bet2==0,cAlp1==0,cAlp2==0,cAlp5==0}},
{"simple_spin_1m",{Alp1==0,Alp2==0,Alp3==0,Alp4==0,Alp6==0,Bet1==0,Bet3==0,cAlp1==0,cAlp2==0,cAlp4==0,cAlp5==0}},{"simple_spin_2m",{Alp2==0,Alp3==0,Alp4==0,Alp5==0,Alp6==0,Bet1==0,Bet2==0,Bet3==0,cAlp1==0,cAlp2==0,cAlp4==0}},{"simple_spin_1p",{Alp1==0,Alp2==0,Alp3==0,Alp4==0,Alp6==0,Bet1==0,Bet2==0,cAlp1==0,cAlp2==0,cAlp5==0}},
{"simple_spin_1m",{Alp2==0,Alp2==0,Alp3==0,Alp4==0,Alp6==0,Bet1==0,Bet3==0,cAlp1==0,cAlp4==0,cAlp5==0}},{"simple_spin_2m",{Alp2==0,Alp3==0,Alp4==0,Alp5==0,Alp6==0,Bet1==0,Bet2==0,Bet3==0,cAlp1==0,cAlp2==0,cAlp4==0}},{"simple_spin_0-2m_a",{Alp1==0,Alp3==0,Alp4==0,Alp5==0,Alp6==0,Bet1==0,Bet2==0,Bet3==0}},
{"simple_spin_0-2m_b",{Alp2==0,Alp4==0,Alp5==0,Alp6==0,Bet1==0,Bet2==0,Bet3==0}}};


(* ::Input::Initialization:: *)
(*calibratoin survey, Yo&Nester over 10 nodes*)
(*remember to really calibrate you will want to disable the multipliers again!*)
(*
For[node=0,node<10,node++,
JobsBatch=({#[[1]]<>"_node_"<>ToString@node,#[[2]]})&/@RawJobsBatch;
Run@("mkdir ./svy/node-"<>ToString@node);
Run@("mkdir ./svy/node-"<>ToString@node<>"/chr");
FileNameJoin@{Directory[],"svy/node-"<>ToString@node,"JobsBatch.mx"}~DumpSave~{JobsBatch};
];
*)


(* ::Input::Initialization:: *)
AllTheories={};
Combos[conds_,combo_]:=Module[{extraconds,extralabel},
extraconds=#[[1]]&/@combo;
extralabel=StringJoin@(#[[2]]&/@combo);
{conds[[1]]<>"_"<>extralabel,conds[[2]]~Join~extraconds}];


(* ::Input::Initialization:: *)
(*
Switches=Subsets@{{cAlp3\[Equal]0,"A3"},{cAlp4\[Equal]0,"A4"},{cAlp6\[Equal]0,"A6"},{cBet1\[Equal]0,"B1"},{cBet2\[Equal]0,"B2"},{cBet3\[Equal]0,"B3"}};
C1=Combos[RawJobsBatch[[3]],#]&/@Switches;
Switches=Subsets@{{cAlp3\[Equal]0,"A3"},{cAlp6\[Equal]0,"A6"},{cBet1\[Equal]0,"B1"},{cBet2\[Equal]0,"B2"},{cBet3\[Equal]0,"B3"}};
C2=Combos[RawJobsBatch[[4]],#]&/@Switches;
Switches=Subsets@{{cAlp3\[Equal]0,"A3"},{cAlp5\[Equal]0,"A5"},{cAlp6\[Equal]0,"A6"},{cBet1\[Equal]0,"B1"},{cBet2\[Equal]0,"B2"},{cBet3\[Equal]0,"B3"}};
C3=Combos[RawJobsBatch[[5]],#]&/@Switches;
*)


(* ::Input::Initialization:: *)
Switches=Subsets@{{cAlp3==0,"A3"},{cAlp4==0,"A4"},{cAlp6==0,"A6"},{cBet1==0,"B1"},{cBet2==0,"B2"},{cBet3==0,"B3"}};
C1=Combos[RawJobsBatch[[6]],#]&/@Switches;
Switches=Subsets@{{cAlp2==0,"A2"},{cAlp3==0,"A3"},{cAlp6==0,"A6"},{cBet1==0,"B1"},{cBet2==0,"B2"},{cBet3==0,"B3"}};(*trying A2 --- VERY HEAVY, but posibly do-able*)
C2=Combos[RawJobsBatch[[7]],#]&/@Switches;
Switches=Subsets@{{cAlp3==0,"A3"},{cAlp5==0,"A5"},{cAlp6==0,"A6"},{cBet1==0,"B1"},{cBet2==0,"B2"},{cBet3==0,"B3"}};(*don't add A4*)
C3=Combos[RawJobsBatch[[8]],#]&/@Switches;


(* ::Input::Initialization:: *)
(**)AllTheories=Join[C1,C2,C3];(**)
(*AllTheories=C1;*)
(**)AllTheories=RandomSample@AllTheories;(**)
(*AllTheories=Reverse@(AllTheories~SortBy~((Length@Flatten@#)&));*)
Print[Length@AllTheories];
st={{},{},{},{},{},{},{},{},{},{},{},{},{},{}};
For[i=1,i<Length@AllTheories+1,i++,
index=i~Mod~14+1;
Print@index;
Print@st[[index]];
st[[index]]=st[[index]]~Append~AllTheories[[i]];
];
AllTheories=st;

For[i=1,i<15,i++,Print["Node number ",i-1," is allocated a batch of ",Length@AllTheories[[i]]," theories."];];

For[node=0,node<Length@AllTheories,node++,
JobsBatch=AllTheories[[node+1]];
Run@("mkdir ./svy/node-"<>ToString@node);
Run@("mkdir ./svy/node-"<>ToString@node<>"/chr");
FileNameJoin@{Directory[],"svy/node-"<>ToString@node,"peta4.svy.mx"}~DumpSave~{JobsBatch};
];


(* ::Input::Initialization:: *)
Quit[];
